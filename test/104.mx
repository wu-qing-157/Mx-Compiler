A a, b;

class A {
    int a, b;
    int sum() {
        return a + b;
    }
    void incA(int delta) {
        a += delta;
    }
}

int c = 3, d = 4 + 1, e, f, g;
int[] array;

int det(A a, A b) {
    return a.a * b.b - a.b * b.a;
}

void printX() {
    println(x);
}

string x, y = "123";

class B {
    A a;
    B b;
    A a0, a1;
    int x;
}

void statement() {
    for (int i = 1; i <= 10; i++) c++;
    for (int i = 1, j = 2; i <= 10; ) i += j;
    int out; for (i = 1; i <= 10; i++) c++;
    for (; false; );
    int i = 1, j = 2;
    if (i == 0) c++;
    if (i == 0) c++; else d++;
    if (i == 0) c++; else if (j == 0) d++; else e++;
    if (i == 0) if (j == 0) c++; else d++;
    while (false);
    while (i == 0) c++;
    for (i = 1; i <= 10; i++) {
        if (i <= 5) continue;
        else break;
    }
    while (i <= 10) {
        if (i > 8) break;
        else continue;
    }
}

int[][][] expression() {
    int[][][] result = new int[2][1][];
    result[0][0] = new int[100];
    result[1][0] = array;
    int[] ret = result[0][0];
    a.incA(100);
    ret[0] = a.sum();
    ret[1] = a.b;
    ret[2] = c + d * e;
    ret[3] = (c + d) * e;
    ret[4] = ++c;
    ret[5] = c++;
    ret[6] = --c;
    ret[7] = c--;
    ret[8] = +c;
    ret[9] = -c;
    ret[10] = !s ? c : d;
    ret[11] = ~c;
    ret[12] += c + d;
    ret[13] -= c - d;
    ret[14] *= c * d;
    ret[15] /= c / d;
    ret[16] %= c % d;
    ret[17] <<= c << d;
    ret[18] >>= c >> d;
    ret[19] >>>= c >>> d;
    ret[20] = c < d ? c : d;
    ret[21] = c > d ? c : d;
    ret[22] = c <= d ? c : d;
    ret[23] = c >= d ? c : d;
    ret[24] = c == d ? c : d;
    ret[25] = c != d ? c : d;
    ret[26] &= c & d;
    ret[27] |= c | d;
    ret[28] ^= c ^ d;
    ret[29] = s && t ? c : d;
    ret[30] = s || t ? c : d;
    return result;
}

bool s = false, t = true;

int main() {
    x = "\"hello\tworld!\"";
    a.a = 3; a.b = 7; b.a = 5; b.b = 9;
    e = det(a, b);
    printX();
    statement();
    int[][][] ret = expression();
    int pr = 0;
    for (int i = 0; i <= 30; i++) pr += ret[0][0][i];
    println(pr);
    return 0;
}