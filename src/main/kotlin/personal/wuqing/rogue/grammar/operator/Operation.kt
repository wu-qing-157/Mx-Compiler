package personal.wuqing.rogue.grammar.operator

import personal.wuqing.rogue.grammar.MxType

sealed class Operation {
    object Plus : Operation()
    object SPlus : Operation()
    object Minus : Operation()
    object Times : Operation()
    object Div : Operation()
    object Rem : Operation()
    object BAnd : Operation()
    object BOr : Operation()
    object IAnd : Operation()
    object IOr : Operation()
    object Xor : Operation()
    object Shl : Operation()
    object UShr : Operation()
    object Shr : Operation()
    object Less : Operation()
    object SLess : Operation()
    object Leq : Operation()
    object SLeq : Operation()
    object Greater : Operation()
    object SGreater : Operation()
    object Geq : Operation()
    object SGeq : Operation()
    object BEqual : Operation()
    object IEqual : Operation()
    object SEqual : Operation()
    object BNeq : Operation()
    object INeq : Operation()
    object SNeq : Operation()
    object BAssign : Operation()
    object IAssign : Operation()
    object SAssign : Operation()
    object PlusI : Operation()
    object SPlusI : Operation()
    object MinusI : Operation()
    object TimesI : Operation()
    object DivI : Operation()
    object RemI : Operation()
    object AndI : Operation()
    object OrI : Operation()
    object XorI : Operation()
    object ShlI : Operation()
    object UShrI : Operation()
    object ShrI : Operation()
    class PEqual(val clazz: MxType) : Operation()
    class PNeq(val clazz: MxType) : Operation()
    class PAssign(val clazz: MxType) : Operation()
}
